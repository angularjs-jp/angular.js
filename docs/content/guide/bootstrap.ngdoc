@ngdoc overview
@name 開発者向けガイド：ブートストラップ
@description

# 概要

このページでは、Angularの初期化の手順と、手動で初期化する必要があればどのようにそれが行えるかを説明していきます。


# Angular `<script>` タグ 

以下の例では、いわゆる自動初期化におけるAngularの推奨された使い方を示します。


<pre>
<!doctype html>
<html xmlns:ng="http://angularjs.org" ng-app>
  <body>
    ...
    <script src="angular.js">
  </body>
</html>
</pre>

  * `script`タグはページの最下部に配置します。scriptタグをページの最下部に配置することで、`angular.js`の読み込みによるHTMLの読み込みブロックが発生しないので、アプリケーションの読み込み時間を改善できます。最新のファイルは{@link http://code.angularjs.org/}から取得できます。セキュリティホールをさらすことになるので、プロダクションコードにこのURLのリンクを用いてはいけません。開発段階のコードに用いることは問題ありません。
    * 選択肢：`angular-[version].js`は、人が読める、開発とデバッグに適切なファイルです。
    * 選択肢：`angular-[version].min.js`は、プロダクションレベルで使うのに適切な、圧縮され難読化されたファイルです。
  * 自動的にangularを起動したければ、アプリケーションのルートに、一般的には、`<html>`タグに`ng-app`を配置します。

        <html ng-app>

  * 古いスタイルの構文`ng:`を使用する場合、IEを幸せにするため、`html`にxml-namespaceが含まれます。(これは歴史的な理由によるもので、`ng:`を使用することは現在推奨されていません。)

        <html xmlns:ng="http://angularjs.org">



# 自動初期化

`DOMContentLoaded`のタイミングでAngularは自動的に初期化します。この時、Angularはアプリケーションのルートに指定されている{@link api/ng.directive:ngApp `ng-app`}の命令を探します。
{@link api/ng.directive:ngApp `ng-app`}の命令が見つかれば、Angularは以下のことを行います。:

  * 命令に関連づけられた{@link guide/module モジュール}の読み込み。
  * アプリケーションの{@link api/AUTO.$injector インジェクター}を生成。
  * Angularにコンパイルされるルートとして、{@link api/ng.directive:ngApp `ng-app`}の命令を処理するDOMをコンパイルします。このDOMの部分のみをAngularのアプリケーションとして取り扱うことができます。


<pre>
<!doctype html>
<html ng-app="optionalModuleName">
  <body>
    足し算ができます: {{ 1+2 }}。
    <script src="angular.js"></script>
  </body>
</html>
</pre>



# 手動初期化


初期化の過程でより多くのことをする必要がある場合は、手動で初期化することができます。 そうしなければならないケースでは、スクリプトローダーを用いるかAngularがページをコンパイルする前に処理を行う必要があります。


以下はAngularの手動初期化の例です。この例は{@link api/ng.directive:ngApp ng-app}の命令を用いることと同じ意味を持ちます。

<pre>
<!doctype html>
<html xmlns:ng="http://angularjs.org">
  <body>
    こんにちわ {{'世界'}}!
    <script src="http://code.angularjs.org/angular.js"></script>
    <script>
       angular.element(document).ready(function() {
         angular.bootstrap(document);
       });
    </script>
  </body>
</html>
</pre>

コードは以下の手順に従います。:

  1. ページと全てのコードが読み込まれたら、HTMLテンプレートのルート、一般的にはドキュメントルートを探します。
  2. 実行可能で双方向にバインドされたアプリケーションにテンプレートを{@link compiler コンパイル}するために{@link api/angular.bootstrap}を呼び出します。
