@ngdoc overview
@name Cookbook: Hello World
@description

<doc:example>
 <doc:source>
  <script>
    function HelloCntl($scope) {
      $scope.name = 'World';
    }
  </script>
  <div ng-controller="HelloCntl">
    Your name: <input type="text" ng-model="name" value="World"/>
    <hr/>
    Hello {{name}}!
  </div>
 </doc:source>
 <doc:scenario>
   it('should change the binding when user enters text', function() {
     expect(binding('name')).toEqual('World');
     input('name').enter('angular');
     expect(binding('name')).toEqual('angular');
   });
 </doc:scenario>
</doc:example>

# 注意点

ソースコードと注目点をみていきましょう:

* The script tag that {@link guide/bootstrap bootstraps} the Angular environment.
* headタグの中の一番上にあるスクリプトタグはAngularの環境を{@link guide/bootstrap 自動的に初期化}します。
* Hello以下に続く文字は{@link api/ng.directive:input インプットフォーム}から入力されたテキストと同じになります。
* リスナの登録と変更時に発火するイベントは必要ありません。
* 暗黙の存在である変数nameはroot{@link api/ng.$rootScope.Scope スコープ}に含まれています。
* ふたつの波括弧`{{markup}}`は変数nameをHello以下の文字にバインドさせます。
* The concept of {@link guide/dev_guide.templates.databinding data binding}, which reflects any
changes to the
  input field in the greeting text.
* {@link guide/dev_guide.templates.databinding データバインディング}の構想では、インプットフォームの全ての変化をHello以下に反映させます。
