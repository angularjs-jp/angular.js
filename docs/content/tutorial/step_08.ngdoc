@ngdoc overview
@name Tutorial: 8 - もっとテンプレートについて
@description

<ul doc-tutorial-nav="8"></ul>


このステップでは、ユーザーがスマートフォンリスト上のスマートフォンをクリックした時に表示される詳細ビューを実装します。


<div doc-tutorial-reset="8"></div>


リスト上のスマートフォンをクリックすると、そのスマートフォン固有の情報を持つ詳細ページが表示されます。

スマートフォン詳細ページを実装するため、データを取得するのに{@link api/ng.$http $http}を使います。そしてビューテンプレート`phone-detail.html`を実際に作っていきます。

主な変更点は以下に挙げます。完全な差分は{@link
https://github.com/angular/angular-phonecat/compare/step-7...step-8
GitHub}で見ることができます：

## データ

`phones.json`の他に、`app/phones/`ディレクトリにはスマートフォンごとに１つのjsonファイルが入っています：

__`app/phones/nexus-s.json`:__ (サンプルスニペット)
<pre>
{
  "additionalFeatures": "Contour Display, Near Field Communications (NFC),...",
  "android": {
      "os": "Android 2.3",
      "ui": "Android"
  },
  ...
  "images": [
      "img/phones/nexus-s.0.jpg",
      "img/phones/nexus-s.1.jpg",
      "img/phones/nexus-s.2.jpg",
      "img/phones/nexus-s.3.jpg"
  ],
  "storage": {
      "flash": "16384MB",
      "ram": "512MB"
  }
}
</pre>


それぞれのファイルは、同じデータ構造を使ってスマートフォンの様々な特性を記述しています。このデータをスマートフォン詳細画面に表示します。


## コントローラー

jsonファイルを取得するために、`$http`を使って`PhoneDetailCtrl`を拡張します。これはスマートフォンリストのコントローラーと同じように動きます。

__`app/js/controllers.js`:__
<pre>
function PhoneDetailCtrl($scope, $routeParams, $http) {
  $http.get('phones/' + $routeParams.phoneId + '.json').success(function(data) {
    $scope.phone = data;
  });
}

//PhoneDetailCtrl.$inject = ['$scope', '$routeParams', '$http'];
</pre>

HTTPリクエストのためのURLを組み立てるため、`$route`サービスによって現在のルートから取り出される`$routeParams.phoneId`を使います。


## テンプレート

TBDプレースホルダーの行は、スマートフォンの詳細を構成するようにリストとバインディングで置き換えました。モデルからビューにスマートフォンデータを射影するために、angularの`{{expression}}`マークアップと`ngRepeat`をどこで使っているかに注目して下さい。


__`app/partials/phone-detail.html`:__
<pre>
<img ng-src="{{phone.images[0]}}" class="phone">

<h1>{{phone.name}}</h1>

<p>{{phone.description}}</p>

<ul class="phone-thumbs">
  <li ng-repeat="img in phone.images">
    <img ng-src="{{img}}">
  </li>
</ul>

<ul class="specs">
  <li>
    <span>Availability and Networks</span>
    <dl>
      <dt>Availability</dt>
      <dd ng-repeat="availability in phone.availability">{{availability}}</dd>
    </dl>
  </li>
    ...
  </li>
    <span>Additional Features</span>
    <dd>{{phone.additionalFeatures}}</dd>
  </li>
</ul>
</pre>

<div style="display: none">
TODO!
<img  class="diagram" src="img/tutorial/tutorial_08-09_final.png">
</div>

## テスト

ステップ５で`PhoneListCtrl`コントローラーのために書いたものと似たようなユニットテストを新しく書きました。

__`test/unit/controllersSpec.js`:__
<pre>
...
  describe('PhoneDetailCtrl', function(){
    var scope, $httpBackend, ctrl;

    beforeEach(inject(function(_$httpBackend_, $rootScope, $routeParams, $controller) {
      $httpBackend = _$httpBackend_;
      $httpBackend.expectGET('phones/xyz.json').respond({name:'phone xyz'});

      $routeParams.phoneId = 'xyz';
      scope = $rootScope.$new();
      ctrl = $controller(PhoneDetailCtrl, {$scope: scope});
    }));


    it('should fetch phone detail', function() {
      expect(scope.phone).toBeUndefined();
      $httpBackend.flush();

      expect(scope.phone).toEqual({name:'phone xyz'});
    });
  });
...
</pre>

次の出力をTestacularのタブで確認できるはずです：

    Chrome 22.0: Executed 3 of 3 SUCCESS (0.039 secs / 0.012 secs)


Nexus Sの詳細ページに遷移しページの見出しが"Nexus S"であることを確認するという新しいエンドツーエンドテストも追加しました。

__`test/e2e/scenarios.js`:__
<pre>
...
  describe('Phone detail view', function() {

    beforeEach(function() {
      browser().navigateTo('../../app/index.html#/phones/nexus-s');
    });


    it('should display nexus-s page', function() {
      expect(binding('phone.name')).toBe('Nexus S');
    });
  });
...
</pre>


`./scripts/e2e-test.sh`を再実行、またはエンドツーエンドテストランナーのブラウザタブを更新してテストの実行を見るか、もしくは{@link
http://angular.github.com/angular-phonecat/step-8/test/e2e/runner.html
Angular's server}でテストの実行を見て下さい。


# 実験

* {@link guide/dev_guide.e2e-testing Angularのエンドツーエンドテスト実行API}を使って、Nexus Sの詳細ページに４つのサムネイル画像が表示されることを確認するテストを書いて下さい。


# まとめ

これでスマートフォン詳細画面ができました。{@link step_09 ステップ９}に進んでカスタム表示フィルターの書き方を学びましょう。


<ul doc-tutorial-nav="8"></ul>
