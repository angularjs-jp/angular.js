@ngdoc overview
@name Tutorial: 6 - Templating Links & Images
@description

<ul doc-tutorial-nav="6"></ul>

このステップでは、電話のリストにサムネイル画像と、今のところは空のリンクを加えます。
今後のステップでは、このリンク先で、カタログ内の電話についての詳細情報を表示するように変更します。


<div doc-tutorial-reset="6"></div>

リンクと電話リスト内にある画像を見てください。

下記に大事な変更を列挙しておきます。完全な差分を見ることもできます{@link
https://github.com/angular/angular-phonecat/compare/step-5...step-6
GitHub}:


## Data

`phones.json`ファイルはそれぞれの電話にユニークなIDと画像URLが含まれています。
このURLは`app/img/phones/`以下をさしています。

__`app/phones/phones.json`__ (sample snippet):
<pre>
 [
  {
   ...
   "id": "motorola-defy-with-motoblur",
   "imageUrl": "img/phones/motorola-defy-with-motoblur.0.jpg",
   "name": "Motorola DEFY\u2122 with MOTOBLUR\u2122",
   ...
  },
 ...
 ]
</pre>


## Template

__`app/index.html`:__
<pre>
...
        <ul class="phones">
          <li ng-repeat="phone in phones | filter:query | orderBy:orderProp" class="thumbnail">
            <a href="#/phones/{{phone.id}}" class="thumb"><img ng-src="{{phone.imageUrl}}"></a>
            <a href="#/phones/{{phone.id}}">{{phone.name}}</a>
            <p>{{phone.snippet}}</p>
          </li>
        </ul>
...
</pre>

電話詳細ページへのリンクを動的に生成するために、href 属性値の中で、もうおなじみである、2重カーリーブレイスでの変数バインディングを使います。
step2 では要素のコンテントとして {{phone.name}} を使いました。ここでは {{phone.id}} バインディングを要素の属性内で使います。

また、それぞれのレコードの隣に、{@link api/ng.directive:ngSrc ngSrc} ディレクティブを使った画像タグによって、電話画像を表示します。このディレクティブは、ブラウザーが angular の {{ expression }} マークアップを（変数置換無しに）そのまま解釈し、無効な URL である http://localhost:8000/app/{{phone.imageUrl}} へのリクエストを送信することを防ぎます。もし素直に通常の src 属性内で変数バインディングを使用してしまう（<img class="diagram" src="{{phone.imageUrl}}">）と、この無効なリクエストが発生するわけです。ngSrc ディレクティブを使えば無効な場所へブラウザーがリクエストを送信することを防ぎます。

## Test

__`test/e2e/scenarios.js`__:
<pre>
...
    it('should render phone specific links', function() {
      input('query').enter('nexus');
      element('.phones li a').click();
      expect(browser().location().url()).toBe('/phones/nexus-s');
    });
...
</pre>

今後のステップで実装する電話の詳細情報へのリンクが正しく生成されているかを確認する end-to-end テストを加えました。

./scripts/e2e-test.sh を再度実行するか、end-to-end テストランナーを表示しているブラウザータブを再読み込みすることでテストが動く様子を見れます。
テスト結果はこちらで確認できます{@link
http://angular.github.com/angular-phonecat/step-6/test/e2e/runner.html
Angular's server}.


# Experiments

* `ng-src` ディレクティブを従来の src 属性に置き換えてみましょう。Firebug や Chrome の Web Inspector などのツールを使うか、ウェブサーバーのアクセスログを見て、/app/%7B%7Bphone.imageUrl%7D%7D （または /app/{{phone.imageUrl}}）などへ無駄なリクエストを送っていることを確認してみましょう。

この問題は、ブラウザが無効な画像アドレスの img タグを見た瞬間、つまり Angular が式を評価して有効なアドレスをインジェクトする前に、リクエストを送信してしまうことが原因です。


# Summary

今回は電話画像とリンクをつけました。つぎは {@link step_07 step 7} で Angular layout template を学びます。Angular なら簡単に複数の view を持つアプリケーションを作れることを実感してください。

<ul doc-tutorial-nav="6"></ul>
