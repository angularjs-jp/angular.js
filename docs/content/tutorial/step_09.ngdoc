@ngdoc overview
@name Tutorial: 9 - フィルター
@description

<ul doc-tutorial-nav="9"></ul>


このステップではカスタム表示フィルターの作り方を学びます。


<div doc-tutorial-reset="9"></div>


詳細ページの１つに移動して下さい。

前ステップでは、詳細ページはスマートフォンに特定の機能があるかどうかを示すために"true"または"false"を表示していました。カスタムフィルターを使ってこうしたテキスト文字列を記号（✓を"true"、✘を"false"の代わりに）に変換しました。フィルターのコードがどのような感じなのか見てみましょう。

主な変更点は以下に挙げます。完全な差分は{@link
https://github.com/angular/angular-phonecat/compare/step-8...step-9
GitHub}で見ることができます：


## カスタムフィルター

新しいカスタムフィルターを作るために、`phonecatFilters`モジュールを作り、カスタムフィルターをこのモジュールに登録します：

__`app/js/filters.js`:__
<pre>
angular.module('phonecatFilters', []).filter('checkmark', function() {
  return function(input) {
    return input ? '\u2713' : '\u2718';
  };
});
</pre>

フィルターの名前は"checkmark"です。`input`は`true`または`false`に評価され、その値に応じて予め選んだtrueまたはfalseを表す２つのユニコード文字（`\u2713`と`\u2718`）のうち１つが返されます。

こうしてフィルターが準備できたので、`phonecatFilters`モジュールをメインの`phonecat`モジュールが依存するものとして登録します。

__`app/js/app.js`:__
<pre>
...
angular.module('phonecat', ['phonecatFilters']).
...
</pre>


## テンプレート

フィルターのコードは`app/js/filters.js`の中にあるので、このファイルをレイアウトテンプレートの中に含める必要があります。

__`app/index.html`:__
<pre>
...
 <script src="js/controllers.js"></script>
 <script src="js/filters.js"></script>
...
</pre>

Angularテンプレートの中でフィルタを使う記法は次の通りです：

    {{ expression | filter }}

スマートフォン詳細テンプレートの中でこのフィルターを使ってみましょう：



__`app/partials/phone-detail.html`:__
<pre>
...
    <dl>
      <dt>Infrared</dt>
      <dd>{{phone.connectivity.infrared | checkmark}}</dd>
      <dt>GPS</dt>
      <dd>{{phone.connectivity.gps | checkmark}}</dd>
    </dl>
...
</pre>


## テスト

他の全てのコンポーネントと同様、フィルターはテストされるべきです。そしてこのテストを書くのも非常に簡単です。

__`test/unit/filtersSpec.js`:__
<pre>
describe('filter', function() {

  beforeEach(module('phonecatFilters'));


  describe('checkmark', function() {

    it('should convert boolean values to unicode checkmark or cross',
        inject(function(checkmarkFilter) {
      expect(checkmarkFilter(true)).toBe('\u2713');
      expect(checkmarkFilter(false)).toBe('\u2718');
    }));
  });
});
</pre>

フィルターのテストが実行される前に、テストインジェクターを`phonecatFilters`モジュールで設定しておく必要があることに注意して下さい。

次の出力をTestacularのタブで確認できるはずです：

        Chrome 22.0: Executed 4 of 4 SUCCESS (0.034 secs / 0.012 secs)


# 実験

* いくつかの{@link api/ng.$filter Angularのビルトインフィルター}を使って実験してみましょう。次のバインディングを`index.html`に追加して下さい：
  * `{{ "lower cap string" | uppercase }}`
  * `{{ {foo: "bar", baz: 23} | json }}`
  * `{{ 1304375948024 | date }}`
  * `{{ 1304375948024 | date:"MM/dd/yyyy @ h:mma" }}`

* インプット要素を使ってモデルを作り、フィルターが適用されたバインディングに結びつけることもできます。次をindex.htmlに加えましょう：

        <input ng-model="userInput"> Uppercased: {{ userInput | uppercase }}


# まとめ

これでカスタムフィルターの書き方、テストの仕方を学びました。{@link step_10 ステップ10}に進んでスマートフォン詳細ページをさらに進化させるためにAngularをどのように使うことができるかを学びましょう。


<ul doc-tutorial-nav="9"></ul>
