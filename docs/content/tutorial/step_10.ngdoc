@ngdoc overview
@name Tutorial: 10 - イベントハンドラー
@description

<ul doc-tutorial-nav="10"></ul>


このステップでは、スマートフォン詳細ページにクリック可能なスマートフォン画像のスワッパーを追加します。


<div doc-tutorial-reset="10"></div>


スマートフォン詳細ビューは現在のスマートフォンの１枚の大きな画像と複数のより小さいサムネイル画像を表示します。見たいサムネイル画像をクリックすることで、大きな画像をサムネイル画像で置き換えることができたら素敵でしょう。Angularを使ってこれをどう実現するかを見てみましょう。

主な変更点は以下に挙げます。完全な差分は{@link
https://github.com/angular/angular-phonecat/compare/step-9...step-10
GitHub}で見ることができます：


## コントローラー

__`app/js/controllers.js`:__
<pre>
...
function PhoneDetailCtrl($scope, $routeParams, $http) {
  $http.get('phones/' + $routeParams.phoneId + '.json').success(function(data) {
    $scope.phone = data;
    $scope.mainImageUrl = data.images[0];
  });

  $scope.setImage = function(imageUrl) {
    $scope.mainImageUrl = imageUrl;
  }
}

//PhoneDetailCtrl.$inject = ['$scope', '$routeParams', '$http'];
</pre>

`PhoneDetailCtrl`コントローラーの中で、モデルプロパティ`mainImageUrl`を作り、そのデフォルト値を最初のスマートフォン画像のURLに設定しました。

また、`mainImageUrl`の値を変更する`setImage`イベントハンドラーを作りました。


## テンプレート

__`app/partials/phone-detail.html`:__
<pre>
<img ng-src="{{mainImageUrl}}" class="phone">

...

<ul class="phone-thumbs">
  <li ng-repeat="img in phone.images">
    <img ng-src="{{img}}" ng-click="setImage(img)">
  </li>
</ul>
...
</pre>

大きな画像の`ngSrc`ディレクティブを`mainImageUrl`プロパティに結びつけました。

また、{@link api/ng.directive:ngClick `ngClick`}ハンドラーをサムネイル画像に登録しました。ユーザーがサムネイル画像のどれかをクリックすると、このハンドラーは`setImage`イベントハンドラー関数を使って`mainImageUrl`プロパティの値をサムネイル画像のURLに変更します。

<div style="display: none">
TODO!
<img  class="diagram" src="img/tutorial/tutorial_10-11_final.png">
</div>

## テスト

この新しい機能を確認するためにエンドツーエンドテストを２つ追加しました。１つは、メイン画像がデフォルトで最初のスマートフォンの画像にセットされることを確認します。２つ目のテストはいくつかのサムネイル画像をクリックして、メイン画像が適切に変更されることを確認します。

__`test/e2e/scenarios.js`:__
<pre>
...
  describe('Phone detail view', function() {

...

    it('should display the first phone image as the main phone image', function() {
      expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.0.jpg');
    });


    it('should swap main image if a thumbnail image is clicked on', function() {
      element('.phone-thumbs li:nth-child(3) img').click();
      expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.2.jpg');

      element('.phone-thumbs li:nth-child(1) img').click();
      expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.0.jpg');
    });
  });
});
</pre>

`./scripts/e2e-test.sh`を再実行、またはエンドツーエンドテストランナーのブラウザタブを更新してテストの実行を見るか、もしくは{@link
http://angular.github.com/angular-phonecat/step-10/test/e2e/runner.html
Angularのサーバー}でテストの実行を見て下さい。

# 実験

* `PhoneDetailCtrl`に新しいコントローラーメソッドを追加しましょう：

          $scope.hello = function(name) {
              alert('Hello ' + (name || 'world') + '!');
          }

  そして次を`phone-details.html`テンプレートに加えましょう：

          <button ng-click="hello('Elmo')">Hello</button>

<div style="display: none">
TODO!
  The controller methods are inherited between controllers/scopes, so you can use the same snippet
in the `phone-list.html` template as well.

* Move the `hello` method from `PhoneCatCtrl` to `PhoneListCtrl` and you'll see that the button
declared in `index.html` will stop working, while the one declared in the `phone-list.html`
template remains operational.
</div>


# まとめ

スマートフォン画像のスワップ機能ができたので、{@link step_11 ステップ11}（最後のステップです！）でデータを取得するよりよい方法を学ぶ準備ができました。


<ul doc-tutorial-nav="10"></ul>
